name: Build and Run Docker Image

on:
  push:
    branches:
      - 'ci'  # Trigger on push to release branches

jobs:
  build_and_run:
    runs-on: ubuntu-latest  # Use a GitHub-hosted runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Image Name
        run: |
          echo DOCKER_IMAGE_NAME=$(echo ${{ github.event.repository.name }} | tr '[A-Z]' '[a-z]') | tee -a $GITHUB_ENV
          echo CODELINE=$(echo ${{ github.ref_name }} | tr '[A-Z]' '[a-z]') | tee -a $GITHUB_ENV
          echo INSTANCE_NAME=${{ github.ref_name }}_InT | tee -a $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }}:${{ env.CODELINE }}
          echo '## Image Details' >> $GITHUB_STEP_SUMMARY
          docker images | sed -r 's/\s+/|/g' | grep -E '^R' | sed -r 's/^|$/\|/g' >> $GITHUB_STEP_SUMMARY
          echo '----------' >> $GITHUB_STEP_SUMMARY
          docker images | sed -r 's/\s+/|/g' | grep -E 'pyterrabacktyl' | sed -r 's/^|$/\|/g' >> $GITHUB_STEP_SUMMARY

      - name: Run Docker Container
        run: |
          docker run -d --name ${{ env.INSTANCE_NAME }} ${{ env.DOCKER_IMAGE_NAME }}:${{ env.CODELINE }}

      - name: Clean Up
      # Hopefully this is being nice to GHA infra and not wasted CPU cycles
        run: |
          docker rm -f ${{ env.INSTANCE_NAME }} || true
          docker rmi ${{ env.DOCKER_IMAGE_NAME }}:${{ env.CODELINE }} || true
